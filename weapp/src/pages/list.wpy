<template>
  <div class="campaign-weapp" id="list">
      <div class="campaign-weapp-content" wx:if="{{pageShow=='index'}}">
          <!-- <ul class="list-main">
            <block v-for="(item,index) in list">
                <li class="item">
                    <img class="img100" :src="item.url" mode="widthFix" />
                </li>
            </block>
          </ul> -->
        <view class='content'>
            <view class='left'>
                <block wx:for="{{leftList}}" wx:key="index">
                    <image class='pic' style='height:{{item.height2}}' src='{{item.url}}'></image>
                </block>
            </view>
            <view class='right'>
                <block wx:for="{{rightList}}" wx:key="index">
                    <image class='pic' style='height:{{item.height2}}' src='{{item.url}}'></image>
                </block>
            </view>
        </view>
      </div>
  </div>
</template>

<config>
{
    usingComponents: {

    },
    onReachBottomDistance: 100,
    enablePullDownRefresh: true
}
</config>
<script>
import wepy from '@wepy/core';
// 配置
import appConfig from 'Appconfig';
import appData from '../common/app_data';
// 公用
import { mapState, mapActions } from '@wepy/x';
import store from '../store';
import mixinsIndex from 'Mixinsindex';
import mixinShare from 'Mixinsshare';
import * as common from 'Common';
import eventHub from '../common/eventHub';
import { uploadFile } from '../services/uploadFile';

// 所有API管理
import Api from 'Api';
import { countTime, countTimeNum } from '@/services/countTime';
import moment from 'moment';
// 日志
import Log from 'Log';

wepy.page({
    store,
    mixins: [mixinsIndex, mixinShare],
    data: {
        pageShow:'',
        page: 1,
        pageEnd:false,
        list:[],
        leftList:[],
        rightList:[],
        leftHight: 0,
        rightHight: 0
    },
    computed: {
        ...mapState([])
    },
    methods: {
        getTestFunc() {
            Api.userinfo_log().then(res => {
                console.log('res', res);
            });
        },
        updata() {
            this.getcampaign();
        },
        updata02() {
            wx.chooseImage({
                count: 9,
                sizeType: ['original', 'compressed'],
                sourceType: ['album', 'camera'],
                success: async res => {
                    // tempFilePath可以作为img标签的src属性显示图片
                    const tempFilePaths = res.tempFilePaths;
                    let files = await uploadFile(tempFilePaths,'text');
                    console.log('-----', files);
                }
            });
        },
        getcampaign() {
            Api.campaign({
                page: this.page
            }).then(res => {
                if (res['success']) {
                    res = res.result
                    var list = res.list||{};
                    if( this.page <=1 ) {
                        this.list = [];
                    }
                    this.list = this.list.concat(list.map(item=>{
                        if(item['url']){
                            item['url'] = appConfig.ossPath + item['url']
                        }
                        return item;
                    }))
                    this.setImagesHeight()
                    if( res.current_page>=res.last_page ) this.pageEnd = true;
                    this.page++;
                } else {
                    wx.showModal({
                        content: res.msg,
                        showCancel: false
                    });
                }
                this.pageShow = 'index';
                if( appConfig.stopPullDownRefresh ) {
                    wx.stopPullDownRefresh();
                    appConfig.stopPullDownRefresh = false;
                }
            });
        },
       async setImagesHeight(){
            var leftH = this.leftHight;
            var rightH = this.rightHight;
            var leftData = this.leftList;
            var rightData = this.rightList;
            // 计算图片的宽高并且返回
            var allData  = this.list
            wx.showLoading({
                content:"加载中..."
            })

            allData = await common.imageInfo(allData)
            wx.hideLoading()

            for (let i = 0; i < allData.length; i++) {
                var currentItemHeight = parseInt(Math.round(allData[i].height * 340 / allData[i].width));
                    allData[i].height2 = currentItemHeight + "rpx";//因为xml文件中直接引用的该值作为高度，所以添加对应单位
                if (leftH == rightH || leftH < rightH) {//判断左右两侧当前的累计高度，来确定item应该放置在左边还是右边
                    leftData.push(allData[i]);
                    leftH += currentItemHeight;
                } else {
                    rightData.push(allData[i]);
                    rightH += currentItemHeight;
                }
            }
            
            this.leftHight = leftH
            this.rightHight = rightH
            this.leftList = leftData
            this.rightList = rightData
        }
    },
    onLoad(opt) {
        this.getcampaign()
    },

    onShow() {},
    
    // 上拉监控
    onPullDownRefresh(){
        this.page = 1
        this.pageEnd = false
        appConfig.stopPullDownRefresh = true;
        this.getcampaign()
    },
    // 到底监控
    onReachBottom(){
        if( this.pageEnd ) return;
        this.getcampaign()
    }
});
</script>

<style lang="less">
page{
    background: rgb(247, 247, 247);
}
page{
  width: 100%;
  margin: 0;
  background: #F2F2F2;
}
.content{
  display: flex;
  flex-direction: row;
  margin: 20rpx;
  overflow: hidden;
}

.left{
  width: 345rpx;
}

.right{
  width: 345rpx;
  margin-left: 20rpx;
}

.pic{
  border-radius: 10rpx;
  width: 345rpx;
}
#list{
    .list-main{
        width: 710rpx;margin: 20rpx;
        display: flex;justify-content: flex-start;align-items: flex-start;flex:1;
        flex-wrap: wrap;
        .item{
            width: 340rpx;border-radius: 12rpx;overflow: hidden;background: #fff;
            box-shadow: 0 0 20rpx rgba(138, 141, 141, 0.5);
            margin-bottom: 20rpx;
            &:nth-child(2n+1){
                margin-right: 30rpx;
            }
        }
    }
}
</style>
